<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant confidence="0.000009" no="0">
<note confidence="0.9520205">
Proceedings of the 40th Annual Meeting of the Association for
Computational Linguistics (ACL), Philadelphia, July 2002, pp. 72-79.
</note>
<title confidence="0.998677">
Ellipsis Resolution with Underspecified Scope
</title>
<author confidence="0.990942">
Michael Schiehlen
</author>
<affiliation confidence="0.989792">
Institute of Natural Language Processing
</affiliation>
<address confidence="0.607745666666667">
Azenbergstr. 12
70174 Stuttgart
Fed. Rep. of Germany
</address>
<email confidence="0.996448">
mike@ims.uni-stuttgart.de
</email>
<sectionHeader confidence="0.995601" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999548125">The paper presents an approach to ellipsis resolution in a framework of scope underspecification (Underspecified Discourse Representation Theory). It is argued that the approach improves on previous proposals to integrate ellipsis resolution and scope underspecification (Crouch, 1995; Egg et al., 2001) in that application processes like anaphora resolution do not require full disambiguation but can work directly on the underspecified representation. Furthermore it is shown that the approach presented can cope with the examples discussed by Dalrymple et al. (1991) as well as a problem noted recently by Erk and Koller (2001).</bodyText>
<sectionHeader confidence="0.999133" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.979803048780488">Explicit computation of all scope configurations is apt to slow down an NLP system considerably. Therefore, underspecification of scope ambiguities is an important prerequisite for efficient processing. Many tasks, like ellipsis resolution or anaphora resolution, are arguably best performed on a representation with fixed scope order. An underspecification formalism should support execution of these tasks. This paper aims to upgrade an existing underspecification formalism for scope ambiguities, Underspecified Discourse Representation Theory (UDRT) (Reyle, 1993), so that both ellipsis and anaphora resolution can work on the underspecified structures. Many thanks for discussion and motivation are due to the colleagues in Saarbrücken. Several proposals have been made in the literature on how to integrate scope underspecification and ellipsis resolution in a single formalism, e.g. Quasi-Logical Forms (QLF) (Crouch, 1995) and the Constraint Language for Lambda Structures (CLLS) (Egg et al., 2001). That work has primarily aimed at devising methods to untangle quantifier scoping and ellipsis resolution which often interact closely (see Section 6). To this end, description languages have been modelled in which the disambiguation steps of a derivation need not be executed but rather can be explicitly recorded as constraints on the final structure. Constraints are only evaluated when the underspecified representation is finally interpreted. In contrast, UDRT aims at providing a representation formalism that supports interpretation processes such as theorem proving and anaphora resolution. Understood in this sense, underspecification often obviates the need for complete disambiguation. Another consequence is, however, that the strategy of postponing disambiguation steps is in some cases insufficient. A case in point is the phenomenon dubbed Missing Antecedents by Grinder and Postal (1971), illustrated in sentence (1): One of the pronoun’s antecedents is overt, the other is supplied by ellipsis resolution.</bodyText>
<listItem confidence="0.911554">(1) Harry sank a destroyer and so did Bill and they both went down with all hands. (Grinder and Postal, 1971, 279)</listItem>
<bodyText confidence="0.942013470588235">Most approaches to ellipsis and anaphora resolution, e.g. (Asher, 1993; Crouch, 1995; Egg et al., 2001), can readily derive the reading. But consider: (2) Harry sometimes reads a book about a seabattle and so does Bill. They borrow those books from the library. Example (2) still retains five readings (Are there two or even more books? are there one, two, or more than two sea-battles?). An underspecified representation should not be committed to any of these readings, but it should specify that “a book” has narrow scope with respect to the conjunction. Furthermore, an approach to underspecification and ellipsis resolution should make clear why this representation is to be constructed for the discourse (2). While QLF fails the first requirement (a single representation), CLLS fails the second (triggers for construction).</bodyText>
<listItem confidence="0.8816375">(3) * A destroyer went down in some battle and a cruiser did too. Harry sank both destroyers .</listItem>
<bodyText confidence="0.999895266666667">The discourse in (3) is not well-formed. But none of the approaches mentioned can ascertain this fact without complete scope resolution (or ad-hoc restrictions). The paper is organized as follows. Section 2 gives a short introduction to UDRT. Section 3 formulates the general setup of ellipsis resolution assumed in the rest of the paper. Section 4 presents a proposal to deal with scope parallelism in an underspecified representation. Section 5 shows how ellipsis can be treated if it is contained in its antecedent. Section 6 describes a way to model the interaction of ellipsis resolution and scope resolution in an underspecified structure. In section 7 strict and sloppy identity is discussed. Section 8 concludes.</bodyText>
<sectionHeader confidence="0.95308" genericHeader="method">
2 Underspecified Discourse
Representation Structures
</sectionHeader>
<bodyText confidence="0.989479736842105">Reyle (1993) proposes a formalism for underspecification of scope ambiguity. The underspecified representations are called Underspecified Discourse Representation Structures (UDRSs). Completely specified UDRSs correspond to the Discourse Representation Structures (DRSs) of Kamp and Reyle (1993). A UDRS is a triple consisting of a top label, a set of labelled conditions or discourse referents, and a set of subordination constraints. A UDRS is (partially) disambiguated by adding subordination constraints. A UDRS must, however, always comply with the following wellformedness conditions: (1) It does not contain cycles (subordination is a partial order). (2) No label is subordinated to two labels which are siblings, i.e. part of the same complex condition (subordination is a tree order). Figure 1 shows the UDRS for sentence 4 in formal and graph representation.</bodyText>
<listItem confidence="0.873349">(4) Every professor found most solutions.</listItem>
<figureCaption confidence="0.998552">
Figure 1: UDRS for sentence (4)
</figureCaption>
<bodyText confidence="0.996669130434783">For pronouns and definite descriptions another type of constraint is introduced, accessibility constraints. is accessible from ( acc ) iff or and is a right sibling of in a condition expressing material implication or a generalized quantifier (Kamp and Reyle, 1993). An accessibility constraint acc indicates that is an anaphoric element or a presupposition; it thus can be used as a trigger for anaphora resolution and presupposition binding (van der Sandt, 1992). To bind an anaphor to some antecedent expression , a binding constraint ( ) and an equality constraint between two discourse referents are introduced. Binding constraints are interpreted as equality in the subordination order. Any unbound presuppositions remaining after anaphora resolution (corresponding to accessibility constraints without binding constraints) are accommodated, i.e. they end up in an accessible scope position which is as near to the top as possible. Figure 2 shows the UDRS for sentence (5). Accessibility constraints are marked by broken lines, binding constraints are shown as squiggles.</bodyText>
<listItem confidence="0.973837">(5) John revised his paper.</listItem>
<equation confidence="0.969800111111111">
l0
l5:
every( x, l1: , l2: )
x
l6: most( y, l3: y ,l4: )
l8: professor( x )
l7: find( x, y )
l9: solution( y )
,
{ every ,{
professor ,,
most ,,
,
solution ,,
find
1, ,
,
1
</equation>
<figureCaption confidence="0.807185">
Figure 2: UDRS for sentence (5)
</figureCaption>
<sectionHeader confidence="0.976702" genericHeader="method">
3 Ellipsis Resolution
</sectionHeader>
<bodyText confidence="0.99985875">Sag (1976) and Williams (1977) have argued convincingly that VP ellipsis should be resolved on a level where scope is fixed. Dalrymple et al. (1991) distinguish two tasks in ellipsis resolution: 2. interpreting the elliptical (target) clause , given the interpretation of. The paper does not have much to say about task 1. Rather, some “parallelism” module is assumed to take care of task 1. This module determines the UDRS representations of the source clause and of the source and target parallel elements. It also provides a bijective function associating the parallel labels and discourse referents in source and target. For task 2 we adopt the substitutional approach advocated by Crouch (1995): The semantic representation of the target is a copy of the source where target parallel elements have been substituted for source parallel elements ( ). In contrast to Higher-Order Unification (HOU) (Dalrymple et al., 1991) substitution is deterministic: Ambiguities somehow cropping up in the interpretation process (i.e. the strict/sloppy distinction) require a separate explanation.</bodyText>
<sectionHeader confidence="0.977478" genericHeader="method">
4 Scope Parallelism
</sectionHeader>
<bodyText confidence="0.995320846153846">It has frequently been observed that structural ambiguity does not multiply in contexts involving ellipsis: A scope ambiguity associated with the source must be resolved in the same way in source and target. Sentence (6) e.g. has no reading where all professors found the same solution but the students who found a solution each found a different one. (6) Every professor found a solution, and most students did, too. Scope parallelism seems to be somewhat at odds with the idea of resolving ellipses on scopally underspecified representations. If the decisions on scope order have not yet been taken, how can they be guaranteed to be the same in source and target? The QLF approach (Crouch, 1995) gives an interesting answer to this question: It uses re-entrancy to propagate scope decisions among parallel structures. In sentence (6), we see that a scope decision can resolve more than one ambiguity. In UDRT, scope decisions are modelled as subordination constraints. Consequently, sentence (6) shows that subordination constraints may affect more than one pair of labels. Remember that in each process of ellipsis resolution the parallelism module returns a bijective function which expresses the parallelism between labels and discourse referents in source and target. As sentence (6) shows, a subordination constraint that links two source labels and also links the labels corresponding to and in a parallel structure , i.e. and for all . Thus the subordination constraint does not distinguish between source label and parallel labels. Formally, we define two labels and to be equivalent ( ) iff . Now we can model the parallelism effects by stipulating that a subordination constraint connects two equivalence classes and rather than two individual labels and . But every label in one class should not be linked source clause (the antecedent of the ellipsis), the parallel elements in the source clause , the parallel elements in the target (i.e.elliptical) clause , and the nonparallel elements in the target , to every label in the other class.</bodyText>
<equation confidence="0.98205468">
l5: z
l6: z = x
paper( y )
of( y, z )
l7: revise( x, y )
l0
l3: y
,
,
, acc ,
paper , ,
,
of✟
, acc ,
gender masc, ,
, ,
revise
{
}, }
, { acc ,
John ,
l2: John( x )
l1: x
l4:
1. determining parallelism, i.e. identifying the
</equation>
<bodyText confidence="0.9851895">If and are the source labels, it does not make sense, and actually will often lead to a structure violating the wellformedness conditions, to connect e.g.the source label with some target label . Thus we still need a proviso that only such labels can be linked that were determined to be parallel to the source label in the same sequence of ellipsis resolutions. We talk about a sequence here, because, as sentence (7) shows, ellipses may be nested.</bodyText>
<listItem confidence="0.874508666666667">(7) John arrived before the teacher did (1 arrive), and Bill did too (2 arrive before the teacher did (1 arrive)).</listItem>
<bodyText confidence="0.990460151515151">For the implementation of classes, we take our cues from Prolog (Erbach, 1995; Mellish, 1988). In Prolog, class membership is most efficiently tested via unification. For unification to work, the class members must be represented as instances of the representation of the class. If class members are mutually exclusive, their representations must have different constants at some argument position. In this vein, we can think of a label as a Prolog term whose functor denotes the equivalence class and whose argument describes the sequence of ellipsis resolutions that generated the label. Such a sequence can be modelled as a list of numbers which denote resolutions of particular ellipses. An empty list indicates that the label was generated directly by semantic construction. We will call the list of resolution numbers associated with a label the label’s context. For reasons that will become clear only in section 7 discourse referents also have contexts. Although subordination constraints connect classes of labels, they are always evaluated in a particular context. Thus (or, more explicitly, ) can be spelled out as or , but never because in this case context changes. While scope resolution is subject to parallelism and binding is too (see Section 7), examples like (9) suggest that accommodation sites need not be parallel'. (“The jeweler” is accommodated with wide 'Asher et al. (2001) use parallelism between subordination and accommodation to explain the “wide-scope puzzle” observed by Sag (1976). Sentence (8) has only one reading: A specific nurse saw all patients.</bodyText>
<listItem confidence="0.8960245">(8) A nurse saw every patient. Dr. Smith did too. scope, but “his wife” is not.) (9) If Peter is married, his wife is lucky and the jeweler is too.</listItem>
<bodyText confidence="0.985441448275862">Ellipsis resolution works as follows. In semantic construction, all occurrences of labels and discourse referents (except those in subordination constraints) are assigned the empty context (). Whenever an occurrence of ellipsis is recognized, a counter is incremented. Let be the counter’s new value. All parallel labels and discourse referents in the target are replaced by their counterparts in the source ( and ). After substitution proper ( ), the new resolution number is added to the context of every label and discourse referent in . Finally, the non-parallel target elements ( ), if any, are added to the semantic representation of the target. Figure 3 shows the UDRS for sentence (6) after ellipsis resolution. Erk and Koller (2001) discuss sentence (10) which has a reading in which each student went to the station on a different bike. The example is problematic for all approaches which assume source and target scope order to be identical (HOU, QLF, CLLS). (10) John went to the station, and every student did too, on a bike. Erk and Koller (2001) go on to propose an extension of CLLS that permits the reading. In the approach proposed here no special adjustments are needed: The indefinite NP is designated by labels that do not have counterparts in the source. The subordination order is still the same in source and target.</bodyText>
<figure confidence="0.990221285714286">
,
{ every
,
professor ,,
, ,
solution ,,
find ,,
and ,
,
most
}
,
student ,
},
</figure>
<figureCaption confidence="0.90272">
Figure 3: UDRS for sentence (6)
</figureCaption>
<figure confidence="0.539424">
,
solution ,
find
, { ,
</figure>
<sectionHeader confidence="0.959007" genericHeader="method">
5 Antecedent-Contained Ellipsis
</sectionHeader>
<bodyText confidence="0.999749">The elliptical clause can also be contained in the source, cf. example (11).</bodyText>
<listItem confidence="0.651598">(11) John greeted every person that Bill did.</listItem>
<bodyText confidence="0.999736076923077">In this case the quantifier embedding the elliptical clause necessarily takes scope over the source. The treatment of this phenomenon in QLF and CLLS, which consists in checking for cyclic formulae after scope resolution, cannot be transferred to UDRT, since it presupposes resolved scope. Rather we make a distinction between proposed source and actual source. If the target is not contained in the (proposed) source, the actual source is the proposed source. Otherwise, the actual source is defined to be that part of the proposed source which is potentially subordinated2 by the nuclear scope of the quantifier whose restriction contains the target.</bodyText>
<sectionHeader confidence="0.890158" genericHeader="method">
6 Interaction of Ellipsis Resolution and
</sectionHeader>
<subsectionHeader confidence="0.850026">
Quantifier Scoping
</subsectionHeader>
<bodyText confidence="0.984832964285715">Sentence (6) has a third reading in which the indefinite NP “a solution” is raised out of the source clause and gets wide scope over the conjunction. In this case, the quantifier itself is not copied, only the bound variables which remain in the source. Generally, a quantifier that may or may not be raised out of the source is only copied if it gets scope inside the source. Thus the exact determination of the semantic material to be copied (i.e. of the source) is dependent on scope decisions. Consequently, in an approach working on fully specified representations (Dalrymple et al., 1991) scope resolution cannot simply precede ellipsis resolution but rather is interleaved with it. Crouch (1995) considers ordersensitivity of interpretation a serious drawback. In his approach, underspecified formulae are copied in ellipsis resolution. In such formulae, quantifiers are not expressed directly but rather stored in “q-terms”. Q-terms are interpreted as bound variables. Quantifiers are introduced into interpreted structure only when their scope is resolved. Since scope resolution is seen as constraining the structure rather than as an operation of its own, the QLF approach manages to 2 is potentially subordinated to in a UDRS iff the subordination constraint could be added to the UDRS without violating well-formedness conditions. untangle scope resolution and ellipsis resolution. In CLLS (Egg et al., 2001) no copy is made in the underspecified representation. In both approaches, the quantifier is not copied until scope resolution. But the Missing Antecedents phenomenon (1) shows that a copy of the quantifier must be available even before scope resolution so that it can serve as antecedent. But this copy may evaporate later on when more is known about the scope configuration. We will call conditions that possibly evaporate phantom conditions. For their implementation we make use of the fact that a UDRS collects labelled conditions and subordination constraints in sets. In sets, identical elements collapse. Thus, a condition that is completely identical to another condition will vanish in a UDRS. Phantom conditions only arise by parallelism; hence they are identical to their originals but for the context of their labels and discourse referents. To capture the effect of possible evaporation, it suffices to make the update of context in a phantom condition dependent on the relevant scope decision. To implement phantom conditions in a Prolog-style environment, we insert a meta-variable in place of the context and control its instantiation by a special constraint expressing the dependence on the pertinent subordination constraint (a conditional constraint). Conditional constraints have the form K✣ K where is the context variable, is a resolution number, and K is some context.</bodyText>
<figureCaption confidence="0.961428333333333">
Figure 4: UDRS for sentence (6)
Figure 4 illustrates a UDRS with a phantom con-
dition (again representing sentence (6)). A graphical
</figureCaption>
<figure confidence="0.76598">
,
{ every
,
professor ,,
, ,
solution ,,
find ,,
and , ,
most
,
,
student ,
,
solution ,
find
1
1,
</figure>
<equation confidence="0.986964363636364">
, { ,
l6: solution( y )
l1:
l4: professor( x )
every(x,l2: ,l3: )
x
l5: y
l7: find( x, y )
l8: before( l9 , l9 )
l1:
l4: student( x )
1 l7: find( x, y )
most(x,l2: ,l3: )
x
l6: solution( y )
l10: and( l11, l11)
l5: y
X l8: before( l9 , l9 )
l0
l1: every(x,l2: x ,l3: )
l4: assistant( x )
2 l7: find( x, y )
Y
l6: solution( y )
l5:
y
l1: most(x,l2: ,l3: )
x
l4: student( x )
1 l7: find( x, y )
l6: solution( y )
l5: y
Z
</equation>
<figureCaption confidence="0.950675">
Figure 5: UDRS for sentence (12)
</figureCaption>
<bodyText confidence="0.996110419354839">representation of this UDRS can be seen in the first conjunct of Figure 5. Contexts are marked by dotted boxes, conditional constraints by a dotted subordination link with an equation. If the subsequent discourse contains a plural anaphoric NP such as “both solutions”, two or more discourse referents designating solutions are looked for. Two such discourse referents are found ( and ), but they will collapse unless is set to . After consultation of the conditional constraint, the subordination constraint is added. If the subsequent discourse contains a singular anaphoric NP “the solution”, anaphora resolution introduces the converse subordination constraint . Examples involving nested ellipsis (cf. sentence (12)) require copying of context variables and conditional constraints. (12) Every professor found a solution before most students did, and every assistant did too. To copy a context variable , it is replaced by a new variable . The conditional constraint evaluating ( ) is copied to a conditional constraint evaluating . In this constraint is conditionally bound back to : , where is the new resolution number and is the top label of the source. Consider the UDRS for sentence (12) in Figure 5 with three conditional constraints: istential NP “a solution” is copied three times (if ), once (if and ), or not at all (if ).</bodyText>
<sectionHeader confidence="0.867412" genericHeader="evaluation and result">
7 Strict and Sloppy Identity
</sectionHeader>
<bodyText confidence="0.99994475">In the treatment of strict/sloppy ambiguity, we follow the approach of Kehler (1995) which predicts five readings for the notorious example (13) from Gawron and Peters (1990).</bodyText>
<listItem confidence="0.607549">(13) John revised his paper before the teacher did, and Bill did too.</listItem>
<bodyText confidence="0.8452098">In Kehler’s (1995) approach, strict/sloppy ambiguity results from a bifurcation in the process of ellipsis resolution: There are two ways to copy the binding constraint linking an anaphor with its antecedent if the antecedent is in the source'. Let K K J , K J be a binding constraint as introduced by anaphora resolution. The sloppy way to copy the constraint is the usual one, i.e. updating the contexts with the new resolution number. 3If the antecedent of a pronoun is outside the source, the copied pronoun is bound to the source pronoun (strict interpretation), not directly to the antecedent, cf. the reading missing in sentence (14) in which Bill will say that Mary helped Bill before Susan helped John.</bodyText>
<listItem confidence="0.7633385">(14) John will testify that Mary helped him before Susan did, and so will Bill. , , and . The exsloppy K K K J, J The strict way is to bind the variable of the copied pronoun to the variable of the source pronoun.</listItem>
<figure confidence="0.998690957446808">
l1:
x
John(x)
l4:
l7: revise( x, y )
y
paper(y,z)
l8: before( l9 , l9 )
l3:
z
z=x
l7: revise( x, y )
l1:
x
teacher(x)
l3[]
l4:
y
paper(y,z)
l10: and( l11, l11)
l3:
z
z=z[]
1
l0
l1:
2
x
Bill(x)
l4:
l7: revise( x, y )
y
paper(y,z)
l8: before( l9 , l9 )
l3:
z
z=x
l7: revise( x, y )
l1:
x
teacher(x)
l3[1] l3: z
l4:
y
paper(y,z)
z=z[1]
1
</figure>
<figureCaption confidence="0.999702">
Figure 6: UDRS for a reading of sentence (13)
</figureCaption>
<bodyText confidence="0.990416043478261">Figure 6 shows the UDRS for a particular reading of sentence (13): John and Bill revised their own papers before the teacher revised John’s paper. The pronoun is first copied strict ( ), then sloppy ( ), and finally strict again ( ). We have tacitly assumed that source pronouns are resolved before ellipsis resolution. No mechanism has been provided to propagate binding constraints in parallel structures. But note that the order of operations in anaphora resolution is also constrained by structure: Anaphors embedded in other anaphors need to be resolved first (van der Sandt, 1992). Ellipsis resolution may be considered on a par with anaphora resolution in this respect. Anaphors can occur in phantom conditions as well (cf.sentence (15)).(15) John revised a paper of his before the teacher did, and Bill did too. An extension of the copy rules for binding constraints along the lines of Section 6 is straightforward (see below). If the embedding quantifier gets wide scope ( ), source and target constraints collapse (sloppy), or the target constraint asserts self-binding (strict). There are, however, some problems with this extension. See Figure 7 for the strict-sloppy-strict reading of sentence (15). If the indefinite NP gets intermediate scope between “before” and “and”, the context variable will beset to , and to . A clash follows, since is bound both to and . To remedy this defect, we stipulate that resolving the strict/sloppy ambiguity may partially disambiguate the scope structure: If in the course of resolving a particular ellipsis several anaphors are copied with different choices in the strict/sloppy bifurcation, the conditional constraints are evaluated so that the anaphors cannot turn out to be the same. This condition ensures that in the strict-sloppy-strict reading illustrated in Figure 7 the indefinite NP gets narrow scope under “before”.</bodyText>
<sectionHeader confidence="0.997981" genericHeader="conclusion">
8 Conclusion
</sectionHeader>
<bodyText confidence="0.999676333333333">The paper has presented a new approach to integrate ellipsis resolution with scope underspecification. In contrast to previous work (Crouch, 1995)</bodyText>
<figure confidence="0.999233537037037">
strict K K K , K K
sloppy ,,
strict
K , K
K K ,
J J
l0
l1:
x
John(x)
l4:
l7: revise( x, y )
y
paper(y,z)
l8: before( l9 , l9 )
l3:
z
z=x
l7: revise( x, y )
X=[1]
l4:
l1:
y
paper(y,z)
x
teacher(x)
l3[]
l10: and( l11, l11)
l3: z
z=z[]
X
1 2 l7: revise( x, y )
l1:
x
Bill(x)
Y
l4: y
paper(y,z)
l8: before( l9 , l9 )
l3:
z
z=x
l7: revise( x, y )
l1:
x
teacher(x)
l3(X)
Z
l4: y
paper(y,z)
l3:
z
z=z(X)
1
</figure>
<figureCaption confidence="0.999953">
Figure 7: UDRS for sentence (15)
</figureCaption>
<bodyText confidence="0.999457285714286">(Egg et al., 2001) the proposed underspecified representation facilitates the resolution of anaphora by providing explicit representations of potential antecedents. To this end, a method to encode “phantom conditions” has been presented, i.e. subformulae whose presence depends on the scope configuration. Furthermore, a method to deal with scope parallelism in scopally underspecified structures has been proposed. The proposed method has no trouble accounting for cases where the scope order in antecedent clause and elliptical clause is not entirely identical (Erk and Koller, 2001). Finally, it has been shown that the approach can cope with a wide variety of test examples discussed in the literature.</bodyText>
<sectionHeader confidence="0.999278" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999923673913043">
Nicholas Asher, Daniel Hardt, and Joan Busquets. 2001.
Discourse Parallelism, Ellipsis, and Ambiguity. Jour-
nal of Semantics, 18(1).
Nicholas Asher. 1993. Reference to Abstract Objects in
Discourse. Kluwer.
Richard Crouch. 1995. Ellipsis and Quantification: A
Substitutional Approach. In Proceedings of EACL’95,
pages 229–236, Dublin, Ireland.
Mary Dalrymple, Stuart M. Shieber, and Fernando C.N.
Pereira. 1991. Ellipsis and Higher-Order Unification.
Linguistics and Philosophy, 14:399–452.
Markus Egg, Alexander Koller, and Joachim Niehren.
2001. The Constraint Language for Lambda Struc-
tures. Journal of Logic, Language and Information,
10.
Gregor Erbach. 1995. ProFIT: Prolog with Features, In-
heritance and Templates. In Proceedings of EACL’95,
Dublin, Ireland.
Katrin Erk and Alexander Koller. 2001. VP Ellipsis by
Tree Surgery. In Proceedings of the 13th Amsterdam
Colloquium.
Jean Mark Gawron and Stanley Peters. 1990. Anaphora
and Quantification in Situation Semantics. Number 19
in CSLI Lecture Notes. Center for the Study of Lan-
guage and Information, Stanford, CA.
John Grinder and Paul M. Postal. 1971. Missing An-
tecedents. Linguistic Inquiry, 2:269–312.
Hans Kamp and Uwe Reyle. 1993. From Discourse to
Logic: An Introduction to Modeltheoretic Semantics
ofNatural Language. Kluwer.
Andrew Kehler. 1995. Interpreting Cohesive Forms in
the Context ofDisocurse Inference. Ph.D. thesis, Har-
vard University.
Chris Mellish. 1988. Implementing Systemic Classi-
fication by Unification. Computational Linguistics,
14:40–51.
Uwe Reyle. 1993. Dealing with Ambiguities by Under-
specification: Construction, Representation and De-
duction. Journal of Semantics, 10(2):123–179.
Ivan Sag. 1976. Deletion and Logical Form. Ph.D. the-
sis, MIT.
Rob A. van der Sandt. 1992. Presupposition Projec-
tion as Anaphora Resolution. Journal of Semantics,
9(4):333–377.
Edwin Williams. 1977. Discourse and Logical Form.
Linguistic Inquiry, 8(1):101–139.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant confidence="0.446845" no="0">
<note confidence="0.9972975">Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics (ACL), Philadelphia, July 2002, pp. 72-79.</note>
<title confidence="0.985705">Ellipsis Resolution with Underspecified Scope</title>
<author confidence="0.999938">Michael Schiehlen</author>
<affiliation confidence="0.996117">Institute of Natural Language Processing</affiliation>
<address confidence="0.9965795">Azenbergstr. 12 70174 Stuttgart</address>
<author confidence="0.833065">Rep of Germany</author>
<email confidence="0.997577">mike@ims.uni-stuttgart.de</email>
<abstract confidence="0.9718205">The paper presents an approach to ellipsis resolution in a framework of scope underspecification (Underspecified Discourse Representation Theory). It is argued that the approach improves on previous proposals to integrate ellipsis resolution and scope underspecification (Crouch, 1995; Egg et al., 2001) in that application processes like anaphora resolution do not require full disambiguation but can work directly on the underspecified representation. Furthermore it is shown that the approach presented can cope with the examples discussed by Dalrymple et al. (1991) as well as a problem noted recently by</abstract>
<note confidence="0.856094">Erk and Koller (2001).</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Nicholas Asher</author>
<author>Daniel Hardt</author>
<author>Joan Busquets</author>
</authors>
<title>Discourse Parallelism, Ellipsis, and Ambiguity.</title>
<date>2001</date>
<journal>Journal of Semantics,</journal>
<volume>18</volume>
<issue>1</issue>
<contexts>
<context citStr="Asher et al. (2001)" endWordPosition="2029" position="12445" startWordPosition="2026">We will call the list of resolution numbers associated with a label the label’s context. For reasons that will become clear only in section 7 discourse referents also have contexts. Although subordination constraints connect classes of labels, they are always evaluated in a particular context. Thus (or, more explicitly, ) can be spelled out as or , but never because in this case context changes. While scope resolution is subject to parallelism and binding is too (see Section 7), examples like (9) suggest that accommodation sites need not be parallel'. (“The jeweler” is accommodated with wide 'Asher et al. (2001) use parallelism between subordination and accommodation to explain the “wide-scope puzzle” observed by Sag (1976). Sentence (8) has only one reading: A specific nurse saw all patients. (8) A nurse saw every patient. Dr. Smith did too. scope, but “his wife” is not.) (9) If Peter is married, his wife is lucky and the jeweler is too. Ellipsis resolution works as follows. In semantic construction, all occurrences of labels and discourse referents (except those in subordination constraints) are assigned the empty context (). Whenever an occurrence of ellipsis is recognized, a counter is incremente</context>
</contexts>
<marker>Asher, Hardt, Busquets, 2001</marker>
<rawString>Nicholas Asher, Daniel Hardt, and Joan Busquets. 2001. Discourse Parallelism, Ellipsis, and Ambiguity. Journal of Semantics, 18(1).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nicholas Asher</author>
</authors>
<title>Reference to Abstract Objects in Discourse.</title>
<date>1993</date>
<publisher>Kluwer.</publisher>
<contexts>
<context citStr="Asher, 1993" endWordPosition="478" position="3186" startWordPosition="477">. Understood in this sense, underspecification often obviates the need for complete disambiguation. Another consequence is, however, that the strategy of postponing disambiguation steps is in some cases insufficient. A case in point is the phenomenon dubbed Missing Antecedents by Grinder and Postal (1971), illustrated in sentence (1): One of the pronoun’s antecedents is overt, the other is supplied by ellipsis resolution. (1) Harry sank a destroyer and so did Bill and they both went down with all hands. (Grinder and Postal, 1971, 279) Most approaches to ellipsis and anaphora resolution, e.g. (Asher, 1993; Crouch, 1995; Egg et al., 2001), can readily derive the reading. But consider: (2) Harry sometimes reads a book about a seabattle and so does Bill. They borrow those books from the library. Example (2) still retains five readings (Are there two or even more books? are there one, two, or more than two sea-battles?). An underspecified representation should not be committed to any of these readings, but it should specify that “a book” has narrow scope with respect to the conjunction. Furthermore, an approach to underspecification and ellipsis resolution should make clear why this representation</context>
</contexts>
<marker>Asher, 1993</marker>
<rawString>Nicholas Asher. 1993. Reference to Abstract Objects in Discourse. Kluwer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard Crouch</author>
</authors>
<title>Ellipsis and Quantification: A Substitutional Approach.</title>
<date>1995</date>
<booktitle>In Proceedings of EACL’95,</booktitle>
<pages>229--236</pages>
<location>Dublin, Ireland.</location>
<contexts>
<context citStr="Crouch, 1995" endWordPosition="274" position="1901" startWordPosition="273">fixed scope order. An underspecification formalism should support execution of these tasks. This paper aims to upgrade an existing underspecification formalism for scope ambiguities, Underspecified Discourse Representation Theory (UDRT) (Reyle, 1993), so that both ellipsis and anaphora resolution can work on the underspecified structures. Many thanks for discussion and motivation are due to the colleagues in Saarbrücken. Several proposals have been made in the literature on how to integrate scope underspecification and ellipsis resolution in a single formalism, e.g. Quasi-Logical Forms (QLF) (Crouch, 1995) and the Constraint Language for Lambda Structures (CLLS) (Egg et al., 2001). That work has primarily aimed at devising methods to untangle quantifier scoping and ellipsis resolution which often interact closely (see Section 6). To this end, description languages have been modelled in which the disambiguation steps of a derivation need not be executed but rather can be explicitly recorded as constraints on the final structure. Constraints are only evaluated when the underspecified representation is finally interpreted. In contrast, UDRT aims at providing a representation formalism that support</context>
<context citStr="Crouch, 1995" endWordPosition="480" position="3200" startWordPosition="479">in this sense, underspecification often obviates the need for complete disambiguation. Another consequence is, however, that the strategy of postponing disambiguation steps is in some cases insufficient. A case in point is the phenomenon dubbed Missing Antecedents by Grinder and Postal (1971), illustrated in sentence (1): One of the pronoun’s antecedents is overt, the other is supplied by ellipsis resolution. (1) Harry sank a destroyer and so did Bill and they both went down with all hands. (Grinder and Postal, 1971, 279) Most approaches to ellipsis and anaphora resolution, e.g. (Asher, 1993; Crouch, 1995; Egg et al., 2001), can readily derive the reading. But consider: (2) Harry sometimes reads a book about a seabattle and so does Bill. They borrow those books from the library. Example (2) still retains five readings (Are there two or even more books? are there one, two, or more than two sea-battles?). An underspecified representation should not be committed to any of these readings, but it should specify that “a book” has narrow scope with respect to the conjunction. Furthermore, an approach to underspecification and ellipsis resolution should make clear why this representation is to be cons</context>
<context citStr="Crouch (1995)" endWordPosition="1226" position="7792" startWordPosition="1225">lved on a level where scope is fixed. Dalrymple et al. (1991) distinguish two tasks in ellipsis resolution: 2. interpreting the elliptical (target) clause , given the interpretation of . The paper does not have much to say about task 1. Rather, some “parallelism” module is assumed to take care of task 1. This module determines the UDRS representations of the source clause and of the source and target parallel elements. It also provides a bijective function associating the parallel labels and discourse referents in source and target. For task 2 we adopt the substitutional approach advocated by Crouch (1995): The semantic representation of the target is a copy of the source where target parallel elements have been substituted for source parallel elements ( ). In contrast to Higher-Order Unification (HOU) (Dalrymple et al., 1991) substitution is deterministic: Ambiguities somehow cropping up in the interpretation process (i.e. the strict/sloppy distinction) require a separate explanation. 4 Scope Parallelism It has frequently been observed that structural ambiguity does not multiply in contexts involving ellipsis: A scope ambiguity associated with the source must be resolved in the same way in sou</context>
<context citStr="Crouch (1995)" endWordPosition="2606" position="15825" startWordPosition="2605"> the source clause and gets wide scope over the conjunction. In this case, the quantifier itself is not copied, only the bound variables which remain in the source. Generally, a quantifier that may or may not be raised out of the source is only copied if it gets scope inside the source. Thus the exact determination of the semantic material to be copied (i.e. of the source) is dependent on scope decisions. Consequently, in an approach working on fully specified representations (Dalrymple et al., 1991) scope resolution cannot simply precede ellipsis resolution but rather is interleaved with it. Crouch (1995) considers ordersensitivity of interpretation a serious drawback. In his approach, underspecified formulae are copied in ellipsis resolution. In such formulae, quantifiers are not expressed directly but rather stored in “q-terms”. Q-terms are interpreted as bound variables. Quantifiers are introduced into interpreted structure only when their scope is resolved. Since scope resolution is seen as constraining the structure rather than as an operation of its own, the QLF approach manages to 2 is potentially subordinated to in a UDRS iff the subordination constraint could be added to the UDRS with</context>
<context citStr="Crouch, 1995" endWordPosition="3951" position="23578" startWordPosition="3950">lving the strict/sloppy ambiguity may partially disambiguate the scope structure: If in the course of resolving a particular ellipsis several anaphors are copied with different choices in the strict/sloppy bifurcation, the conditional constraints are evaluated so that the anaphors cannot turn out to be the same. This condition ensures that in the strict-sloppy-strict reading illustrated in Figure 7 the indefinite NP gets narrow scope under “before”. 8 Conclusion The paper has presented a new approach to integrate ellipsis resolution with scope underspecification. In contrast to previous work (Crouch, 1995) strict K K K , K K sloppy ,, strict K , K K K , J J l0 l1: x John(x) l4: l7: revise( x, y ) y paper(y,z) l8: before( l9 , l9 ) l3: z z=x l7: revise( x, y ) X=[1] l4: l1: y paper(y,z) x teacher(x) l3[] l10: and( l11, l11) l3: z z=z[] X 1 2 l7: revise( x, y ) l1: x Bill(x) Y l4: y paper(y,z) l8: before( l9 , l9 ) l3: z z=x l7: revise( x, y ) l1: x teacher(x) l3(X) Z l4: y paper(y,z) l3: z z=z(X) 1 Figure 7: UDRS for sentence (15) (Egg et al., 2001) the proposed underspecified representation facilitates the resolution of anaphora by providing explicit representations of potential antecedents. To</context>
</contexts>
<marker>Crouch, 1995</marker>
<rawString>Richard Crouch. 1995. Ellipsis and Quantification: A Substitutional Approach. In Proceedings of EACL’95, pages 229–236, Dublin, Ireland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mary Dalrymple</author>
<author>Stuart M Shieber</author>
<author>Fernando C N Pereira</author>
</authors>
<date>1991</date>
<booktitle>Ellipsis and Higher-Order Unification. Linguistics and Philosophy,</booktitle>
<pages>14--399</pages>
<contexts>
<context citStr="Dalrymple et al. (1991)" endWordPosition="126" position="893" startWordPosition="123">d. Rep. of Germany mike@ims.uni-stuttgart.de Abstract The paper presents an approach to ellipsis resolution in a framework of scope underspecification (Underspecified Discourse Representation Theory). It is argued that the approach improves on previous proposals to integrate ellipsis resolution and scope underspecification (Crouch, 1995; Egg et al., 2001) in that application processes like anaphora resolution do not require full disambiguation but can work directly on the underspecified representation. Furthermore it is shown that the approach presented can cope with the examples discussed by Dalrymple et al. (1991) as well as a problem noted recently by Erk and Koller (2001). 1 Introduction Explicit computation of all scope configurations is apt to slow down an NLP system considerably. Therefore, underspecification of scope ambiguities is an important prerequisite for efficient processing. Many tasks, like ellipsis resolution or anaphora resolution, are arguably best performed on a representation with fixed scope order. An underspecification formalism should support execution of these tasks. This paper aims to upgrade an existing underspecification formalism for scope ambiguities, Underspecified Discour</context>
<context citStr="Dalrymple et al. (1991)" endWordPosition="1137" position="7240" startWordPosition="1134">end up in an accessible scope position which is as near to the top as possible. Figure 2 shows the UDRS for sentence (5). Accessibility constraints are marked by broken lines, binding constraints are shown as squiggles. (5) John revised his paper. l0 l5: every( x, l1: , l2: ) x l6: most( y, l3: y ,l4: ) l8: professor( x ) l7: find( x, y ) l9: solution( y ) , { every ,{ professor ,, most ,, , solution ,, find 1, , , 1 Figure 2: UDRS for sentence (5) 3 Ellipsis Resolution Sag (1976) and Williams (1977) have argued convincingly that VP ellipsis should be resolved on a level where scope is fixed. Dalrymple et al. (1991) distinguish two tasks in ellipsis resolution: 2. interpreting the elliptical (target) clause , given the interpretation of . The paper does not have much to say about task 1. Rather, some “parallelism” module is assumed to take care of task 1. This module determines the UDRS representations of the source clause and of the source and target parallel elements. It also provides a bijective function associating the parallel labels and discourse referents in source and target. For task 2 we adopt the substitutional approach advocated by Crouch (1995): The semantic representation of the target is a</context>
<context citStr="Dalrymple et al., 1991" endWordPosition="2590" position="15717" startWordPosition="2587">ution and Quantifier Scoping Sentence (6) has a third reading in which the indefinite NP “a solution” is raised out of the source clause and gets wide scope over the conjunction. In this case, the quantifier itself is not copied, only the bound variables which remain in the source. Generally, a quantifier that may or may not be raised out of the source is only copied if it gets scope inside the source. Thus the exact determination of the semantic material to be copied (i.e. of the source) is dependent on scope decisions. Consequently, in an approach working on fully specified representations (Dalrymple et al., 1991) scope resolution cannot simply precede ellipsis resolution but rather is interleaved with it. Crouch (1995) considers ordersensitivity of interpretation a serious drawback. In his approach, underspecified formulae are copied in ellipsis resolution. In such formulae, quantifiers are not expressed directly but rather stored in “q-terms”. Q-terms are interpreted as bound variables. Quantifiers are introduced into interpreted structure only when their scope is resolved. Since scope resolution is seen as constraining the structure rather than as an operation of its own, the QLF approach manages to</context>
</contexts>
<marker>Dalrymple, Shieber, Pereira, 1991</marker>
<rawString>Mary Dalrymple, Stuart M. Shieber, and Fernando C.N. Pereira. 1991. Ellipsis and Higher-Order Unification. Linguistics and Philosophy, 14:399–452.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Markus Egg</author>
<author>Alexander Koller</author>
<author>Joachim Niehren</author>
</authors>
<title>The Constraint Language for Lambda Structures.</title>
<date>2001</date>
<journal>Journal of Logic, Language and Information,</journal>
<volume>10</volume>
<contexts>
<context citStr="Egg et al., 2001" endWordPosition="82" position="627" startWordPosition="79">s of the 40th Annual Meeting of the Association for Computational Linguistics (ACL), Philadelphia, July 2002, pp. 72-79. Ellipsis Resolution with Underspecified Scope Michael Schiehlen Institute of Natural Language Processing Azenbergstr. 12 70174 Stuttgart Fed. Rep. of Germany mike@ims.uni-stuttgart.de Abstract The paper presents an approach to ellipsis resolution in a framework of scope underspecification (Underspecified Discourse Representation Theory). It is argued that the approach improves on previous proposals to integrate ellipsis resolution and scope underspecification (Crouch, 1995; Egg et al., 2001) in that application processes like anaphora resolution do not require full disambiguation but can work directly on the underspecified representation. Furthermore it is shown that the approach presented can cope with the examples discussed by Dalrymple et al. (1991) as well as a problem noted recently by Erk and Koller (2001). 1 Introduction Explicit computation of all scope configurations is apt to slow down an NLP system considerably. Therefore, underspecification of scope ambiguities is an important prerequisite for efficient processing. Many tasks, like ellipsis resolution or anaphora reso</context>
<context citStr="Egg et al., 2001" endWordPosition="286" position="1977" startWordPosition="283">ion of these tasks. This paper aims to upgrade an existing underspecification formalism for scope ambiguities, Underspecified Discourse Representation Theory (UDRT) (Reyle, 1993), so that both ellipsis and anaphora resolution can work on the underspecified structures. Many thanks for discussion and motivation are due to the colleagues in Saarbrücken. Several proposals have been made in the literature on how to integrate scope underspecification and ellipsis resolution in a single formalism, e.g. Quasi-Logical Forms (QLF) (Crouch, 1995) and the Constraint Language for Lambda Structures (CLLS) (Egg et al., 2001). That work has primarily aimed at devising methods to untangle quantifier scoping and ellipsis resolution which often interact closely (see Section 6). To this end, description languages have been modelled in which the disambiguation steps of a derivation need not be executed but rather can be explicitly recorded as constraints on the final structure. Constraints are only evaluated when the underspecified representation is finally interpreted. In contrast, UDRT aims at providing a representation formalism that supports interpretation processes such as theorem proving and anaphora resolution. </context>
<context citStr="Egg et al., 2001" endWordPosition="484" position="3219" startWordPosition="481"> underspecification often obviates the need for complete disambiguation. Another consequence is, however, that the strategy of postponing disambiguation steps is in some cases insufficient. A case in point is the phenomenon dubbed Missing Antecedents by Grinder and Postal (1971), illustrated in sentence (1): One of the pronoun’s antecedents is overt, the other is supplied by ellipsis resolution. (1) Harry sank a destroyer and so did Bill and they both went down with all hands. (Grinder and Postal, 1971, 279) Most approaches to ellipsis and anaphora resolution, e.g. (Asher, 1993; Crouch, 1995; Egg et al., 2001), can readily derive the reading. But consider: (2) Harry sometimes reads a book about a seabattle and so does Bill. They borrow those books from the library. Example (2) still retains five readings (Are there two or even more books? are there one, two, or more than two sea-battles?). An underspecified representation should not be committed to any of these readings, but it should specify that “a book” has narrow scope with respect to the conjunction. Furthermore, an approach to underspecification and ellipsis resolution should make clear why this representation is to be constructed for the dis</context>
<context citStr="Egg et al., 2001" endWordPosition="2713" position="16544" startWordPosition="2710">ulae are copied in ellipsis resolution. In such formulae, quantifiers are not expressed directly but rather stored in “q-terms”. Q-terms are interpreted as bound variables. Quantifiers are introduced into interpreted structure only when their scope is resolved. Since scope resolution is seen as constraining the structure rather than as an operation of its own, the QLF approach manages to 2 is potentially subordinated to in a UDRS iff the subordination constraint could be added to the UDRS without violating well-formedness conditions. untangle scope resolution and ellipsis resolution. In CLLS (Egg et al., 2001) no copy is made in the underspecified representation. In both approaches, the quantifier is not copied until scope resolution. But the Missing Antecedents phenomenon (1) shows that a copy of the quantifier must be available even before scope resolution so that it can serve as antecedent. But this copy may evaporate later on when more is known about the scope configuration. We will call conditions that possibly evaporate phantom conditions. For their implementation we make use of the fact that a UDRS collects labelled conditions and subordination constraints in sets. In sets, identical element</context>
<context citStr="Egg et al., 2001" endWordPosition="4061" position="24029" startWordPosition="4058">fore”. 8 Conclusion The paper has presented a new approach to integrate ellipsis resolution with scope underspecification. In contrast to previous work (Crouch, 1995) strict K K K , K K sloppy ,, strict K , K K K , J J l0 l1: x John(x) l4: l7: revise( x, y ) y paper(y,z) l8: before( l9 , l9 ) l3: z z=x l7: revise( x, y ) X=[1] l4: l1: y paper(y,z) x teacher(x) l3[] l10: and( l11, l11) l3: z z=z[] X 1 2 l7: revise( x, y ) l1: x Bill(x) Y l4: y paper(y,z) l8: before( l9 , l9 ) l3: z z=x l7: revise( x, y ) l1: x teacher(x) l3(X) Z l4: y paper(y,z) l3: z z=z(X) 1 Figure 7: UDRS for sentence (15) (Egg et al., 2001) the proposed underspecified representation facilitates the resolution of anaphora by providing explicit representations of potential antecedents. To this end, a method to encode “phantom conditions” has been presented, i.e. subformulae whose presence depends on the scope configuration. Furthermore, a method to deal with scope parallelism in scopally underspecified structures has been proposed. The proposed method has no trouble accounting for cases where the scope order in antecedent clause and elliptical clause is not entirely identical (Erk and Koller, 2001). Finally, it has been shown that</context>
</contexts>
<marker>Egg, Koller, Niehren, 2001</marker>
<rawString>Markus Egg, Alexander Koller, and Joachim Niehren. 2001. The Constraint Language for Lambda Structures. Journal of Logic, Language and Information, 10.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gregor Erbach</author>
</authors>
<title>ProFIT: Prolog with Features, Inheritance and Templates.</title>
<date>1995</date>
<booktitle>In Proceedings of EACL’95,</booktitle>
<location>Dublin, Ireland.</location>
<contexts>
<context citStr="Erbach, 1995" endWordPosition="1811" position="11123" startWordPosition="1810">t does not make sense, and actually will often lead to a structure violating the wellformedness conditions, to connect e.g. the source label with some target label . Thus we still need a proviso that only such labels can be linked that were determined to be parallel to the source label in the same sequence of ellipsis resolutions. We talk about a sequence here, because, as sentence (7) shows, ellipses may be nested. (7) John arrived before the teacher did (1 arrive), and Bill did too (2 arrive before the teacher did (1 arrive)). For the implementation of classes, we take our cues from Prolog (Erbach, 1995; Mellish, 1988). In Prolog, class membership is most efficiently tested via unification. For unification to work, the class members must be represented as instances of the representation of the class. If class members are mutually exclusive, their representations must have different constants at some argument position. In this vein, we can think of a label as a Prolog term whose functor denotes the equivalence class and whose argument describes the sequence of ellipsis resolutions that generated the label. Such a sequence can be modelled as a list of numbers which denote resolutions of partic</context>
</contexts>
<marker>Erbach, 1995</marker>
<rawString>Gregor Erbach. 1995. ProFIT: Prolog with Features, Inheritance and Templates. In Proceedings of EACL’95, Dublin, Ireland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Katrin Erk</author>
<author>Alexander Koller</author>
</authors>
<title>VP Ellipsis by Tree Surgery.</title>
<date>2001</date>
<booktitle>In Proceedings of the 13th Amsterdam Colloquium.</booktitle>
<contexts>
<context citStr="Erk and Koller (2001)" endWordPosition="138" position="954" startWordPosition="135"> presents an approach to ellipsis resolution in a framework of scope underspecification (Underspecified Discourse Representation Theory). It is argued that the approach improves on previous proposals to integrate ellipsis resolution and scope underspecification (Crouch, 1995; Egg et al., 2001) in that application processes like anaphora resolution do not require full disambiguation but can work directly on the underspecified representation. Furthermore it is shown that the approach presented can cope with the examples discussed by Dalrymple et al. (1991) as well as a problem noted recently by Erk and Koller (2001). 1 Introduction Explicit computation of all scope configurations is apt to slow down an NLP system considerably. Therefore, underspecification of scope ambiguities is an important prerequisite for efficient processing. Many tasks, like ellipsis resolution or anaphora resolution, are arguably best performed on a representation with fixed scope order. An underspecification formalism should support execution of these tasks. This paper aims to upgrade an existing underspecification formalism for scope ambiguities, Underspecified Discourse Representation Theory (UDRT) (Reyle, 1993), so that both e</context>
<context citStr="Erk and Koller (2001)" endWordPosition="2209" position="13520" startWordPosition="2206">t those in subordination constraints) are assigned the empty context (). Whenever an occurrence of ellipsis is recognized, a counter is incremented. Let be the counter’s new value. All parallel labels and discourse referents in the target are replaced by their counterparts in the source ( and ). After substitution proper ( ), the new resolution number is added to the context of every label and discourse referent in . Finally, the non-parallel target elements ( ), if any, are added to the semantic representation of the target. Figure 3 shows the UDRS for sentence (6) after ellipsis resolution. Erk and Koller (2001) discuss sentence (10) which has a reading in which each student went to the station on a different bike. The example is problematic for all approaches which assume source and target scope order to be identical (HOU, QLF, CLLS). (10) John went to the station, and every student did too, on a bike. Erk and Koller (2001) go on to propose an extension of CLLS that permits the reading. In the approach proposed here no special adjustments are needed: The indefinite NP is designated by labels that do not have counterparts in the source. The subordination order is still the same in source and target. </context>
</contexts>
<marker>Erk, Koller, 2001</marker>
<rawString>Katrin Erk and Alexander Koller. 2001. VP Ellipsis by Tree Surgery. In Proceedings of the 13th Amsterdam Colloquium.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jean Mark Gawron</author>
<author>Stanley Peters</author>
</authors>
<title>Anaphora and Quantification in Situation Semantics.</title>
<date>1990</date>
<journal>Number</journal>
<booktitle>in CSLI Lecture Notes. Center for the Study of Language and Information,</booktitle>
<volume>19</volume>
<location>Stanford, CA.</location>
<contexts>
<context citStr="Gawron and Peters (1990)" endWordPosition="3350" position="20161" startWordPosition="3347">placed by a new variable . The conditional constraint evaluating ( ) is copied to a conditional constraint evaluating . In this constraint is conditionally bound back to : , where is the new resolution number and is the top label of the source. Consider the UDRS for sentence (12) in Figure 5 with three conditional constraints: istential NP “a solution” is copied three times (if ), once (if and ), or not at all (if ). 7 Strict and Sloppy Identity In the treatment of strict/sloppy ambiguity, we follow the approach of Kehler (1995) which predicts five readings for the notorious example (13) from Gawron and Peters (1990). (13) John revised his paper before the teacher did, and Bill did too. In Kehler’s (1995) approach, strict/sloppy ambiguity results from a bifurcation in the process of ellipsis resolution: There are two ways to copy the binding constraint linking an anaphor with its antecedent if the antecedent is in the source'. Let K K J , K J be a binding constraint as introduced by anaphora resolution. The sloppy way to copy the constraint is the usual one, i.e. updating the contexts with the new resolution number. 3If the antecedent of a pronoun is outside the source, the copied pronoun is bound to the </context>
</contexts>
<marker>Gawron, Peters, 1990</marker>
<rawString>Jean Mark Gawron and Stanley Peters. 1990. Anaphora and Quantification in Situation Semantics. Number 19 in CSLI Lecture Notes. Center for the Study of Language and Information, Stanford, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Grinder</author>
<author>Paul M Postal</author>
</authors>
<title>Missing Antecedents. Linguistic Inquiry,</title>
<date>1971</date>
<pages>2--269</pages>
<contexts>
<context citStr="Grinder and Postal (1971)" endWordPosition="428" position="2881" startWordPosition="425">ut rather can be explicitly recorded as constraints on the final structure. Constraints are only evaluated when the underspecified representation is finally interpreted. In contrast, UDRT aims at providing a representation formalism that supports interpretation processes such as theorem proving and anaphora resolution. Understood in this sense, underspecification often obviates the need for complete disambiguation. Another consequence is, however, that the strategy of postponing disambiguation steps is in some cases insufficient. A case in point is the phenomenon dubbed Missing Antecedents by Grinder and Postal (1971), illustrated in sentence (1): One of the pronoun’s antecedents is overt, the other is supplied by ellipsis resolution. (1) Harry sank a destroyer and so did Bill and they both went down with all hands. (Grinder and Postal, 1971, 279) Most approaches to ellipsis and anaphora resolution, e.g. (Asher, 1993; Crouch, 1995; Egg et al., 2001), can readily derive the reading. But consider: (2) Harry sometimes reads a book about a seabattle and so does Bill. They borrow those books from the library. Example (2) still retains five readings (Are there two or even more books? are there one, two, or more </context>
</contexts>
<marker>Grinder, Postal, 1971</marker>
<rawString>John Grinder and Paul M. Postal. 1971. Missing Antecedents. Linguistic Inquiry, 2:269–312.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hans Kamp</author>
<author>Uwe Reyle</author>
</authors>
<title>From Discourse to Logic: An Introduction to Modeltheoretic Semantics ofNatural Language.</title>
<date>1993</date>
<publisher>Kluwer.</publisher>
<contexts>
<context citStr="Kamp and Reyle (1993)" endWordPosition="779" position="5111" startWordPosition="776">hows how ellipsis can be treated if it is contained in its antecedent. Section 6 describes a way to model the interaction of ellipsis resolution and scope resolution in an underspecified structure. In section 7 strict and sloppy identity is discussed. Section 8 concludes. 2 Underspecified Discourse Representation Structures Reyle (1993) proposes a formalism for underspecification of scope ambiguity. The underspecified representations are called Underspecified Discourse Representation Structures (UDRSs). Completely specified UDRSs correspond to the Discourse Representation Structures (DRSs) of Kamp and Reyle (1993). A UDRS is a triple consisting of a top label, a set of labelled conditions or discourse referents, and a set of subordination constraints. A UDRS is (partially) disambiguated by adding subordination constraints. A UDRS must, however, always comply with the following wellformedness conditions: (1) It does not contain cycles (subordination is a partial order). (2) No label is subordinated to two labels which are siblings, i.e. part of the same complex condition (subordination is a tree order). Figure 1 shows the UDRS for sentence 4 in formal and graph representation. (4) Every professor found </context>
</contexts>
<marker>Kamp, Reyle, 1993</marker>
<rawString>Hans Kamp and Uwe Reyle. 1993. From Discourse to Logic: An Introduction to Modeltheoretic Semantics ofNatural Language. Kluwer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andrew Kehler</author>
</authors>
<title>Interpreting Cohesive Forms in the Context ofDisocurse Inference.</title>
<date>1995</date>
<tech>Ph.D. thesis,</tech>
<institution>Harvard University.</institution>
<contexts>
<context citStr="Kehler (1995)" endWordPosition="3336" position="20071" startWordPosition="3335">tudents did, and every assistant did too. To copy a context variable , it is replaced by a new variable . The conditional constraint evaluating ( ) is copied to a conditional constraint evaluating . In this constraint is conditionally bound back to : , where is the new resolution number and is the top label of the source. Consider the UDRS for sentence (12) in Figure 5 with three conditional constraints: istential NP “a solution” is copied three times (if ), once (if and ), or not at all (if ). 7 Strict and Sloppy Identity In the treatment of strict/sloppy ambiguity, we follow the approach of Kehler (1995) which predicts five readings for the notorious example (13) from Gawron and Peters (1990). (13) John revised his paper before the teacher did, and Bill did too. In Kehler’s (1995) approach, strict/sloppy ambiguity results from a bifurcation in the process of ellipsis resolution: There are two ways to copy the binding constraint linking an anaphor with its antecedent if the antecedent is in the source'. Let K K J , K J be a binding constraint as introduced by anaphora resolution. The sloppy way to copy the constraint is the usual one, i.e. updating the contexts with the new resolution number. </context>
</contexts>
<marker>Kehler, 1995</marker>
<rawString>Andrew Kehler. 1995. Interpreting Cohesive Forms in the Context ofDisocurse Inference. Ph.D. thesis, Harvard University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chris Mellish</author>
</authors>
<title>Implementing Systemic Classification by Unification. Computational Linguistics,</title>
<date>1988</date>
<pages>14--40</pages>
<contexts>
<context citStr="Mellish, 1988" endWordPosition="1813" position="11139" startWordPosition="1812">e sense, and actually will often lead to a structure violating the wellformedness conditions, to connect e.g. the source label with some target label . Thus we still need a proviso that only such labels can be linked that were determined to be parallel to the source label in the same sequence of ellipsis resolutions. We talk about a sequence here, because, as sentence (7) shows, ellipses may be nested. (7) John arrived before the teacher did (1 arrive), and Bill did too (2 arrive before the teacher did (1 arrive)). For the implementation of classes, we take our cues from Prolog (Erbach, 1995; Mellish, 1988). In Prolog, class membership is most efficiently tested via unification. For unification to work, the class members must be represented as instances of the representation of the class. If class members are mutually exclusive, their representations must have different constants at some argument position. In this vein, we can think of a label as a Prolog term whose functor denotes the equivalence class and whose argument describes the sequence of ellipsis resolutions that generated the label. Such a sequence can be modelled as a list of numbers which denote resolutions of particular ellipses. A</context>
</contexts>
<marker>Mellish, 1988</marker>
<rawString>Chris Mellish. 1988. Implementing Systemic Classification by Unification. Computational Linguistics, 14:40–51.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Uwe Reyle</author>
</authors>
<title>Dealing with Ambiguities by Underspecification: Construction, Representation and Deduction.</title>
<date>1993</date>
<journal>Journal of Semantics,</journal>
<volume>10</volume>
<issue>2</issue>
<contexts>
<context citStr="Reyle, 1993" endWordPosition="218" position="1538" startWordPosition="217">tly by Erk and Koller (2001). 1 Introduction Explicit computation of all scope configurations is apt to slow down an NLP system considerably. Therefore, underspecification of scope ambiguities is an important prerequisite for efficient processing. Many tasks, like ellipsis resolution or anaphora resolution, are arguably best performed on a representation with fixed scope order. An underspecification formalism should support execution of these tasks. This paper aims to upgrade an existing underspecification formalism for scope ambiguities, Underspecified Discourse Representation Theory (UDRT) (Reyle, 1993), so that both ellipsis and anaphora resolution can work on the underspecified structures. Many thanks for discussion and motivation are due to the colleagues in Saarbrücken. Several proposals have been made in the literature on how to integrate scope underspecification and ellipsis resolution in a single formalism, e.g. Quasi-Logical Forms (QLF) (Crouch, 1995) and the Constraint Language for Lambda Structures (CLLS) (Egg et al., 2001). That work has primarily aimed at devising methods to untangle quantifier scoping and ellipsis resolution which often interact closely (see Section 6). To this </context>
<context citStr="Reyle (1993)" endWordPosition="743" position="4828" startWordPosition="742"> organized as follows. Section 2 gives a short introduction to UDRT. Section 3 formulates the general setup of ellipsis resolution assumed in the rest of the paper. Section 4 presents a proposal to deal with scope parallelism in an underspecified representation. Section 5 shows how ellipsis can be treated if it is contained in its antecedent. Section 6 describes a way to model the interaction of ellipsis resolution and scope resolution in an underspecified structure. In section 7 strict and sloppy identity is discussed. Section 8 concludes. 2 Underspecified Discourse Representation Structures Reyle (1993) proposes a formalism for underspecification of scope ambiguity. The underspecified representations are called Underspecified Discourse Representation Structures (UDRSs). Completely specified UDRSs correspond to the Discourse Representation Structures (DRSs) of Kamp and Reyle (1993). A UDRS is a triple consisting of a top label, a set of labelled conditions or discourse referents, and a set of subordination constraints. A UDRS is (partially) disambiguated by adding subordination constraints. A UDRS must, however, always comply with the following wellformedness conditions: (1) It does not conta</context>
</contexts>
<marker>Reyle, 1993</marker>
<rawString>Uwe Reyle. 1993. Dealing with Ambiguities by Underspecification: Construction, Representation and Deduction. Journal of Semantics, 10(2):123–179.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ivan Sag</author>
</authors>
<title>Deletion and Logical Form.</title>
<date>1976</date>
<tech>Ph.D. thesis,</tech>
<institution>MIT.</institution>
<contexts>
<context citStr="Sag (1976)" endWordPosition="1113" position="7102" startWordPosition="1112">ter anaphora resolution (corresponding to accessibility constraints without binding constraints) are accommodated, i.e. they end up in an accessible scope position which is as near to the top as possible. Figure 2 shows the UDRS for sentence (5). Accessibility constraints are marked by broken lines, binding constraints are shown as squiggles. (5) John revised his paper. l0 l5: every( x, l1: , l2: ) x l6: most( y, l3: y ,l4: ) l8: professor( x ) l7: find( x, y ) l9: solution( y ) , { every ,{ professor ,, most ,, , solution ,, find 1, , , 1 Figure 2: UDRS for sentence (5) 3 Ellipsis Resolution Sag (1976) and Williams (1977) have argued convincingly that VP ellipsis should be resolved on a level where scope is fixed. Dalrymple et al. (1991) distinguish two tasks in ellipsis resolution: 2. interpreting the elliptical (target) clause , given the interpretation of . The paper does not have much to say about task 1. Rather, some “parallelism” module is assumed to take care of task 1. This module determines the UDRS representations of the source clause and of the source and target parallel elements. It also provides a bijective function associating the parallel labels and discourse referents in sou</context>
<context citStr="Sag (1976)" endWordPosition="2045" position="12559" startWordPosition="2044"> only in section 7 discourse referents also have contexts. Although subordination constraints connect classes of labels, they are always evaluated in a particular context. Thus (or, more explicitly, ) can be spelled out as or , but never because in this case context changes. While scope resolution is subject to parallelism and binding is too (see Section 7), examples like (9) suggest that accommodation sites need not be parallel'. (“The jeweler” is accommodated with wide 'Asher et al. (2001) use parallelism between subordination and accommodation to explain the “wide-scope puzzle” observed by Sag (1976). Sentence (8) has only one reading: A specific nurse saw all patients. (8) A nurse saw every patient. Dr. Smith did too. scope, but “his wife” is not.) (9) If Peter is married, his wife is lucky and the jeweler is too. Ellipsis resolution works as follows. In semantic construction, all occurrences of labels and discourse referents (except those in subordination constraints) are assigned the empty context (). Whenever an occurrence of ellipsis is recognized, a counter is incremented. Let be the counter’s new value. All parallel labels and discourse referents in the target are replaced by their</context>
</contexts>
<marker>Sag, 1976</marker>
<rawString>Ivan Sag. 1976. Deletion and Logical Form. Ph.D. thesis, MIT.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rob A van der Sandt</author>
</authors>
<title>Presupposition Projection as Anaphora Resolution.</title>
<date>1992</date>
<journal>Journal of Semantics,</journal>
<volume>9</volume>
<issue>4</issue>
<marker>van der Sandt, 1992</marker>
<rawString>Rob A. van der Sandt. 1992. Presupposition Projection as Anaphora Resolution. Journal of Semantics, 9(4):333–377.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Edwin Williams</author>
</authors>
<date>1977</date>
<booktitle>Discourse and Logical Form. Linguistic Inquiry,</booktitle>
<volume>8</volume>
<issue>1</issue>
<contexts>
<context citStr="Williams (1977)" endWordPosition="1116" position="7122" startWordPosition="1115">solution (corresponding to accessibility constraints without binding constraints) are accommodated, i.e. they end up in an accessible scope position which is as near to the top as possible. Figure 2 shows the UDRS for sentence (5). Accessibility constraints are marked by broken lines, binding constraints are shown as squiggles. (5) John revised his paper. l0 l5: every( x, l1: , l2: ) x l6: most( y, l3: y ,l4: ) l8: professor( x ) l7: find( x, y ) l9: solution( y ) , { every ,{ professor ,, most ,, , solution ,, find 1, , , 1 Figure 2: UDRS for sentence (5) 3 Ellipsis Resolution Sag (1976) and Williams (1977) have argued convincingly that VP ellipsis should be resolved on a level where scope is fixed. Dalrymple et al. (1991) distinguish two tasks in ellipsis resolution: 2. interpreting the elliptical (target) clause , given the interpretation of . The paper does not have much to say about task 1. Rather, some “parallelism” module is assumed to take care of task 1. This module determines the UDRS representations of the source clause and of the source and target parallel elements. It also provides a bijective function associating the parallel labels and discourse referents in source and target. For </context>
</contexts>
<marker>Williams, 1977</marker>
<rawString>Edwin Williams. 1977. Discourse and Logical Form. Linguistic Inquiry, 8(1):101–139.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>